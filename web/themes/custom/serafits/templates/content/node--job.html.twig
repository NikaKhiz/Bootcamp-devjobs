{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}
<article class="container max-w-xs md:max-w-screen-sm lg:max-w-screen-md mx-auto relative">
    {# company site #}
    <div class="flex flex-col gap-y-3 md:flex-row md:justify-between items-center transform -translate-y-[2rem] md:pr-10 bg-white dark:bg-midnight rounded-md  px-6 py-10 mb-6 md:px-0 md:py-0">
        <div class="flex md:gap-x-6 items-center text-center md:text-start">
            <div class="w-12 h-12 md:w-auto md:h-auto rounded-md overflow-hidden absolute top-0 left-1/2 -translate-x-1/2 -translate-y-[1rem] md:static md:transform-none"> {{ content.field_company_logo }} </div>
            <div class="flex flex-col gap-y-1 text-midnight"> 
                <div class="font-semibold text-lg text-midnight dark:text-white"> {{ content.field_company_name }} </div>
                <div class="dark:text-gray"> {{ content.field_company_site }} </div>
            </div>
        </div>
        <button type="button" class="bg-violet bg-opacity-10 hover:bg-opacity-40 text-violet dark:text-white capitalize px-10 py-3 rounded-md transition duration-300 ease-in-out">company site</button>
    </div>
    {# company description #}
    <div class="container max-w-xs md:max-w-screen-sm lg:max-w-screen-md mx-auto text-darkgray px-6 py-10 bg-white dark:bg-midnight">
        {# apply #}
        <div class="mb-6">
            <div class="flex flex-col gap-y-4 md:flex-row justify-between items-center mb-6">
                <div class="flex flex-col gap-y-1 capitalize">
                    <div class="flex "> 
                        <div class="pr-3"> {{ content.field_job_date }}</div>
                        <div> {{ content.field_job_type }} </div>
                    </div>
                    <div class="text-verydarkblue dark:text-white font-semibold text-xl"> {{ content.field_job_name }} </div>
                    <div class="text-violet"> {{ content.field_location }} </div>
                </div>
                <button class="bg-violet hover:bg-opacity-40 text-white capitalize px-10 py-3 rounded-md w-full md:w-auto">apply now</button>
            </div>
            <p>{{ content.body }}</p>
        </div>
        {# requirements #}
        <div class="my-6">
            <h2 class="text-verydarkblue font-2xl capitalize mb-6 dark:text-white"> Requirements</h2>
            <p> {{content.field_requirements }} </p>
        </div>
        {# what you will do #}
        <div class="my-6">
            <h2 class="text-verydarkblue font-2xl capitalize mb-6 dark:text-white"> what you will do </h2>
            <p>{{ content.field_what_you_will_do}} </p>
        </div>
    </div>
</article>
<footer class="w-full bg-white dark:bg-midnight">
    <div class="container mx-auto flex justify-center md:justify-between items-center px-6 py-10">
        <div class="flex flex-col items-center gap-y-2 hidden md:block"> 
            <div class="text-verydarkblue font-2xl dark:text-white"> {{ content.field_job_name }} </div>
            <p class="capitalize text-gray"> so digital inc. </p>
        </div>
        <button type="button" class="bg-violet hover:bg-opacity-40 text-white capitalize px-10 py-3 rounded-md transition duration-300 ease-in-out">company site</button>
    </div>
</footer>